###############################
# DEFAULT 
###############################
enabled: true
developer: false
grpc: true
scheduler: true
worker: true
rest: false
name: notification

image:
    name: spaceone/notification
    version: latest
imagePullPolicy: IfNotPresent

database: {}

application: {}
# local sidecar
##########################
#sidecar:

# Overwrite scheduler config
application_scheduler:
  QUEUES:
    notification_q:
      backend: spaceone.core.queue.redis_queue.RedisQueue
      host: redis
      port: 6379
      channel: notification_job
  SCHEDULERS:
    delete_notification_scheduler:
      backend: spaceone.notification.interface.task.v1.delete_old_notification_scheduler.DeleteOldNotificationScheduler
      queue: notification_q
      interval: 3600
      minute: ':00'

# Overwrite worker config
application_worker:
  QUEUES:
    notification_q:
      backend: spaceone.core.queue.redis_queue.RedisQueue
      host: redis
      port: 6379
      channel: notification_job
  WORKERS:
    notification_worker:
      backend: spaceone.core.scheduler.worker.BaseWorker
      queue: notification_q
      pool: 1

##########################
# Local volumes
##########################
volumes:
    - name: timezone
      hostPath:
          path: /usr/share/zoneinfo/Asia/Seoul
    - name: log-volume
      emptyDir: {}
#######################
# global variable
#######################
global:
    shared: {}
    backend:
        sidecar: []
    #        - name: mongos
    #          image: mongo:4.4.0-bionic
    #          command: [ 'mongos', '--config', '/mnt/mongos.yml', '--bind_ip_all' ]
    #          volumeMounts:
    #            - name: mongos-conf
    #              mountPath: /mnt/mongos.yml
    #              subPath: mongos.yml
    #              readOnly: true
    #            - name: mongo-shard-key
    #              mountPath: /opt/mongos/mongo-shard.pem
    #              subPath: mongo-shard.pem
    #              readOnly: true
    #
        volumes: []
    #        - name: mongo-shard-key
    #          secret:
    #              defaultMode: 0400
    #              secretName: mongo-shard-key
    #        - name: mongos-conf
    #          configMap:
    #              name: mongos-conf
    #        - name: shared-conf
    #          configMap:
    #              name: shared-conf

# Service
service:
    grpc:
        type: ClusterIP
        annotations:
            nil: nil
        ports:
            - name: grpc
              port: 50051
              targetPort: 50051
              protocol: TCP
#    rest:
#      type: NodePort
#      ports:
#        - name: rest
#          port: 80
#          targetPort: 80
#          protocol: TCP

# Ingress for REST
#ingress:
#    annotations:
#        alb.ingress.kubernetes.io/scheme: internet-facing
#    servicePort: 80
#    path: /

################################
# volumeMount per deployment
################################
volumeMounts:
    application_grpc: []
    application_rest: []
    application_scheduler: []
    application_worker: []


####################################
# pod spec (append more pod spec)
# example nodeSelect
#
# pod:
#   spec:
#     nodeSelector:
#       application: my-node-group
####################################
pod:
    spec: {}
